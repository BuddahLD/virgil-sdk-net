<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Virgil.SDK</name>
    </assembly>
    <members>
        <member name="T:Virgil.SDK.Clients.ResponseVerifyClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services which provide response signature.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.VerifyResponse(Virgil.SDK.Http.IResponse,System.Byte[])">
            <summary>
            Verifies the HTTP response with specified public key.
            </summary>
            <param name="nativeResponse">An instance of HTTP response.</param>
            <param name="publicKey">A public key to be used for verification.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.StaticKeyCache">
            <summary>
            Represents static key cache
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.IServiceKeyCache" />
        </member>
        <member name="M:Virgil.SDK.Clients.StaticKeyCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.StaticKeyCache"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.StaticKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>
            An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" />, that represents service card.
            </returns>
        </member>
        <member name="T:Virgil.SDK.Clients.IdentityClient">
            <summary>
            Provides common methods for validating and authorization a different types of identities.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.IdentityClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.IdentityClient"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="baseUri">The base URI.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.Verify(System.String,Virgil.SDK.TransferObject.IdentityType)">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="type">The type of identity.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.IdentityTokenDto"/> response.</returns>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Clients.IdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier.</param>
            <param name="confirmationCode">The confirmation code.</param>
            <param name="timeToLive">The time to live.</param>
            <param name="countToLive">The count to live.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.IsValid(Virgil.SDK.TransferObject.IdentityType,System.String,System.String)">
            <summary>
            Returns true if validation token is valid.
            </summary>
            <param name="type">The type of identity.</param>
            <param name="value">The identity value.</param>
            <param name="validationToken">The validation token.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityClient.IsValid(Virgil.SDK.TransferObject.IdentityTokenDto)">
            <summary>
            Returns true if validation token is valid.
            </summary>
            <param name="token">The identity token DTO that represent Identity and it's type.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IIdentityClient">
            <summary>
            Interface that specifies communication with Virgil Security Identity service.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityClient.Verify(System.String,Virgil.SDK.TransferObject.IdentityType)">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="type">The type of identity.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.IdentityTokenDto"/> response.</returns>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Clients.IIdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier.</param>
            <param name="confirmationCode">The confirmation code.</param>
            <param name="timeToLive">The time to live.</param>
            <param name="countToLive">The count to live.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityClient.IsValid(Virgil.SDK.TransferObject.IdentityType,System.String,System.String)">
            <summary>
            Checks whether the validation token is valid for specified identity.
            </summary>
            <param name="type">The type of identity.</param>
            <param name="value">The identity value.</param>
            <param name="validationToken">The string value that represents validation token for Virgil Identity Service.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityClient.IsValid(Virgil.SDK.TransferObject.IdentityTokenDto)">
            <summary>
            Checks whether the validation token is valid for specified identity.
            </summary>
            <param name="token">The identity token DTO that represents validation token and identity information.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.EndpointClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.EndpointApplicationId">
            <summary>
            The endpoint application identifier
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.Cache">
            <summary>
            The cache
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.IServiceKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IServiceKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/>, that represents service card.</returns>
        </member>
        <member name="T:Virgil.SDK.Clients.IPrivateKeysClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysClient.Stash(System.Guid,System.Byte[],System.String)">
            <summary>
            Uploads private key to private key store.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysClient.Get(System.Guid,Virgil.SDK.TransferObject.IdentityTokenDto)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="token"></param>
            <remarks>Random password will be generated to encrypt server response</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysClient.Get(System.Guid,Virgil.SDK.TransferObject.IdentityTokenDto,System.String)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="token"></param>
            <param name="responsePassword"></param>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysClient.Destroy(System.Guid,System.Byte[],System.String)">
            <summary>
            Deletes the private key from service by specified card ID.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IVirgilService">
            <summary>
            Interface that specifies the Virgil Security service.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.VirgilApplicationIds">
            <summary>
            Holds known Virgil application ids
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.VirgilApplicationIds.IdentityService">
            <summary>
            Identity service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.VirgilApplicationIds.PrivateService">
            <summary>
            Private key service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.VirgilApplicationIds.PublicService">
            <summary>
            Public service app id
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.DynamicKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption and response verification
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.IServiceKeyCache" />
        </member>
        <member name="M:Virgil.SDK.Clients.DynamicKeyCache.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.DynamicKeyCache" /> class.
            </summary>
            <param name="connection">The Virgil Public Services connection instance.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.DynamicKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>
            An instance of <see cref="T:Virgil.SDK.TransferObject.PublicKeyDto" />, that represents Public Key.
            </returns>
        </member>
        <member name="T:Virgil.SDK.Clients.PrivateKeysClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.EndpointClient" />
            <seealso cref="T:Virgil.SDK.Clients.IPrivateKeysClient" />
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.PrivateKeysClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The known key provider.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.PrivateKeysClient"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="baseUri">The base URI.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.Stash(System.Guid,System.Byte[],System.String)">
            <summary>
            Uploads private key to private key store.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.Get(System.Guid,Virgil.SDK.TransferObject.IdentityTokenDto)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="token"></param>
            <remarks>Random password will be generated to encrypt server response</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.Get(System.Guid,Virgil.SDK.TransferObject.IdentityTokenDto,System.String)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="token">Valid identity token with</param>
            <param name="responsePassword">Password to encrypt server response. Up to 31 characters</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysClient.Destroy(System.Guid,System.Byte[],System.String)">
            <summary>
            Deletes the private key from service by specified card ID.
            </summary>
            <param name="virgilCardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="T:Virgil.SDK.Clients.IVirgilCardsClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.IVirgilService" />
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Create(System.String,Virgil.SDK.TransferObject.IdentityType,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card attached to known public key with unconfirmed identity.
            </summary>
            <param name="identityValue">The string that represents the value of identity.</param>
            <param name="identityType">The type of identity.</param>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHash">The collection of hashes of card that need to trust.</param>
            <param name="customData">The collection of custom user information.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
            <remarks>This card will not be searchable by default.</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Create(System.String,Virgil.SDK.TransferObject.IdentityType,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card with unconfirmed identity.
            </summary>
            <param name="identityValue">The value of identity.</param>
            <param name="identityType">The type of virgil card.</param>
            <param name="publicKey">The public key.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHash">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
            <remarks>This card will not be searchable by default.</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Create(Virgil.SDK.TransferObject.IdentityTokenDto,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card attached to known public key with confirmed identity.
            </summary>
            <param name="token">The token.</param>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHash">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Create(Virgil.SDK.TransferObject.IdentityTokenDto,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card with confirmed identity and specified public key.
            </summary>
            <param name="token">The token.</param>
            <param name="publicKey">The public key.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHash">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Search(System.String,System.Nullable{Virgil.SDK.TransferObject.IdentityType},System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Searches the cards by specified criteria.
            </summary>
            <param name="value">The value of identifier. Required.</param>
            <param name="type">The type of identifier. Optional.</param>
            <param name="relations">Relations between Virgil cards. Optional</param>
            <param name="includeUnconfirmed">Unconfirmed Virgil cards will be included in output. Optional</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Trust(System.Guid,System.String,System.Guid,System.Byte[],System.String)">
            <summary>
            Trusts the specified card by signing the card's Hash attribute.
            </summary>
            <param name="trustedCardId">The trusting Virgil Card.</param>
            <param name="trustedCardHash">The trusting Virgil Card Hash value.</param>
            <param name="ownerCardId">The signer virgil card identifier.</param>
            <param name="privateKey">The signer private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Untrust(System.Guid,System.Guid,System.Byte[],System.String)">
            <summary>
            Stops trusting the specified card by deleting the sign digest.
            </summary>
            <param name="trustedCardId">The trusting Virgil Card.</param>
            <param name="ownerCardId">The owner Virgil Card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.GetApplicationCard(System.String)">
            <summary>
            Gets the application card.
            </summary>
            <param name="applicationIdentity">The application identity.</param>
            <returns>Virgil card dto <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IVirgilCardsClient.Revoke(System.Guid,System.Collections.Generic.IEnumerable{Virgil.SDK.TransferObject.IdentityTokenDto})">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="publicKeyId">Id of public key to revoke.</param>
            <param name="tokens">List of all tokens for this public key.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.PublicKeysClient">
            <summary>
                Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.PublicKeysClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.PublicKeysClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service keys cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PublicKeysClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.PublicKeysClient"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="baseUri">The base URI.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.PublicKeysClient.Get(System.Guid)">
            <summary>
                Gets the specified public key by it identifier.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <returns>Public key dto</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.PublicKeysClient.GetExtended(System.Guid,System.Guid,System.Byte[])">
            <summary>
                Gets the specified public key by it identifier with extended data.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="virgilCardId">The virgil card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <returns>List of virgil cards</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.PublicKeysClient.Revoke(System.Guid,System.Collections.Generic.IEnumerable{Virgil.SDK.TransferObject.IdentityTokenDto},System.Guid,System.Byte[])">
            <summary>
            Revoke a  Public Key  endpoint. To revoke the  Public Key  it's mandatory to pass validation tokens obtained on  Virgil Identity  service for all confirmed  Virgil Cards  for this  Public Key .
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="tokens">The identity tokens.</param>
            <param name="virgilCardId">The virgil card identifier.</param>
            <param name="privateKey">The private key.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.VirgilCardsClient">
            <summary>
            Provides common methods to interact with Virgil Card resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.EndpointClient" />
            <seealso cref="T:Virgil.SDK.Clients.IVirgilCardsClient" />
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.VirgilCardsClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.VirgilCardsClient" /> class.
            </summary>
            <param name="accessToken">The access token.</param>
            <param name="baseUri">The base URI.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Create(System.String,Virgil.SDK.TransferObject.IdentityType,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card attached to known public key with unconfirmed identity.
            </summary>
            <param name="identityValue">The string that represents the value of identity.</param>
            <param name="identityType">The type of identity.</param>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHashes">The collection of hashes of card that need to trust.</param>
            <param name="customData">The collection of custom user information.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
            <remarks>This card will not be searchable by default.</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Create(System.String,Virgil.SDK.TransferObject.IdentityType,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card with unconfirmed identity.
            </summary>
            <param name="identityValue">The string that represents the value of identity.</param>
            <param name="identityType">The type of identity.</param>
            <param name="publicKey">The public key.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHash">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
            <exception cref="T:System.NotImplementedException"></exception>
            <remarks>This card will not be searchable by default.</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Create(Virgil.SDK.TransferObject.IdentityTokenDto,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card attached to known public key with confirmed identity.
            </summary>
            <param name="identityToken">The token DTO object that contains validation token from Identity information.</param>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHashes">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto" /></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Create(Virgil.SDK.TransferObject.IdentityTokenDto,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.Guid,System.String},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new Virgil Card with confirmed identity and specified public key.
            </summary>
            <param name="identityToken">The token.</param>
            <param name="publicKey">The public key.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <param name="cardsHashes">The collection of hashes of card that need to trust.</param>
            <param name="customData">The custom data.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Search(System.String,System.Nullable{Virgil.SDK.TransferObject.IdentityType},System.Collections.Generic.IEnumerable{System.Guid},System.Nullable{System.Boolean})">
            <summary>
            Searches the cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier.</param>
            <param name="identityType">The type of identifier.</param>
            <param name="relations">Relations between Virgil cards. Optional</param>
            <param name="includeUnconfirmed">Unconfirmed Virgil cards will be included in output. Optional</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.GetApplicationCard(System.String)">
            <summary>
            Gets the application card.
            </summary>
            <param name="applicationIdentity">The application identity.</param>
            <returns>Virgil card dto <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Revoke(System.Guid,System.Collections.Generic.IEnumerable{Virgil.SDK.TransferObject.IdentityTokenDto})">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="publicKeyId">Id of public key to revoke.</param>
            <param name="tokens">List of all tokens for this public key.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Trust(System.Guid,System.String,System.Guid,System.Byte[],System.String)">
            <summary>
            Trusts the specified card by signing the card's Hash attribute.
            </summary>
            <param name="trustedCardId">The trusting Virgil Card.</param>
            <param name="trustedCardHash">The trusting Virgil Card Hash value.</param>
            <param name="ownerCardId">The signer virgil card identifier.</param>
            <param name="privateKey">The signer private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Virgil.SDK.Clients.VirgilCardsClient.Untrust(System.Guid,System.Guid,System.Byte[],System.String)">
            <summary>
            Stops trusting the specified card by deleting the sign digest.
            </summary>
            <param name="trustedCardId">The trusting Virgil Card.</param>
            <param name="ownerCardId">The owner Virgil Card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IPublicKeysClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IPublicKeysClient.Get(System.Guid)">
            <summary>
            Gets the specified public key by it identifier.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <returns>Public key dto</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IPublicKeysClient.GetExtended(System.Guid,System.Guid,System.Byte[])">
            <summary>
            Gets the specified public key by it identifier with extended data.
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="virgilCardId">The virgil card identifier.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <returns>List of virgil cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.IPublicKeysClient.Revoke(System.Guid,System.Collections.Generic.IEnumerable{Virgil.SDK.TransferObject.IdentityTokenDto},System.Guid,System.Byte[])">
            <summary>
            Revoke a  Public Key  endpoint. To revoke the  Public Key  it's mandatory to pass validation tokens obtained on  Virgil Identity  service for all confirmed  Virgil Cards  for this  Public Key .
            </summary>
            <param name="publicKeyId">The public key identifier.</param>
            <param name="tokens">The identity tokens.</param>
            <param name="virgilCardId">The virgil card identifier.</param>
            <param name="privateKey">The private key.</param>
        </member>
        <member name="T:Virgil.SDK.Helpers.Ensure">
            <summary>
                Ensure input parameters
            </summary>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
                Checks an argument to ensure it isn't null.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
                Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.ServiceSignVerificationException">
            <summary>
            Occurs when service response sign is invalid
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.ServiceSignVerificationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.ServiceSignVerificationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.IdentityServiceException">
            <summary>
            Base exception for all Identity Service exceptions
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.IdentityServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.IdentityServiceException"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilException">
            <summary>
                Base exception class for all Virgil Services operations
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Virgil.SDK.Exceptions.VirgilException.ErrorCode">
            <summary>
                Gets the error code.
            </summary>
            <value>
                The error code.
            </value>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilPrivateServicesException">
            <summary>
                Private service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilPrivateServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilPrivateServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilPublicServicesException">
            <summary>
                Public service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilPublicServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilPublicServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Infrastructure.ApiConfig">
            <summary>
            Api endpoint configuration
            </summary>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Infrastructure.ApiConfig"/> class.
            </summary>
            <param name="accessToken">The access token.</param>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.ApiConfig.AccessToken">
            <summary>
            Gets the access token.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Infrastructure.ApiConfig.PublicServicesAddress">
            <summary>
            The public services address
            </summary>
        </member>
        <member name="F:Virgil.SDK.Infrastructure.ApiConfig.PrivateServicesAddress">
            <summary>
            The private services address
            </summary>
        </member>
        <member name="F:Virgil.SDK.Infrastructure.ApiConfig.IdentityServiceAddress">
            <summary>
            The identity service address
            </summary>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.ApiConfig.PublicServicesUri">
            <summary>
            Gets the public services URI.
            </summary>
            <value>
            The public services URI.
            </value>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.ApiConfig.PrivateServicesUri">
            <summary>
            Gets the private services URI.
            </summary>
            <value>
            The private services URI.
            </value>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.ApiConfig.IdentityServiceUri">
            <summary>
            Gets the identity service URI.
            </summary>
            <value>
            The identity service URI.
            </value>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.WithCustomPublicServiceUri(System.Uri)">
            <summary>
            Set custom public services URI.
            </summary>
            <param name="publicServicesUri">The public services URI.</param>
            <returns>Configured instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.WithCustomPrivateServiceUri(System.Uri)">
            <summary>
            Set custom private service URI.
            </summary>
            <param name="privateServicesUri">The private services URI.</param>
            <returns>Configured instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.WithCustomIdentityServiceUri(System.Uri)">
            <summary>
            Set custom identity service URI.
            </summary>
            <param name="identityServiceUri">The identity service URI.</param>
            <returns>Configured instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.PrepareServices">
            <summary>
            Continue to service configuration.
            </summary>
            <returns><see cref="T:Virgil.SDK.Infrastructure.Bootsrapper"/> instance</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.Build">
            <summary>
            Finished configuation using default settings.
            </summary>
            <returns><see cref="T:Virgil.SDK.Infrastructure.VirgilHub"/> instance</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.ApiConfig.WithCustomServiceInstance``1(``0)">
            <summary>
            Adds custom service implementation to the service list
            </summary>
            <param name="serviceInstance">The service instance to replace default implementation.</param>
            <returns><see cref="T:Virgil.SDK.Infrastructure.Bootsrapper"/> instance</returns>
        </member>
        <member name="T:Virgil.SDK.Infrastructure.Bootsrapper">
            <summary>
            Represents exposed virgil services bootsrap entry point
            </summary>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.Bootsrapper.#ctor(Virgil.SDK.Infrastructure.ApiConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Infrastructure.Bootsrapper"/> class.
            </summary>
            <param name="apiConfig">The API configuration.</param>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.Bootsrapper.WithCustomServiceInstance``1(``0)">
            <summary>
            Withes the custom service instance.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="serviceInstance">The service instance.</param>
            <returns><see cref="T:Virgil.SDK.Infrastructure.Bootsrapper"/> instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.Bootsrapper.Build">
            <summary>
            Builds all service instances.
            </summary>
            <returns><see cref="T:Virgil.SDK.Infrastructure.VirgilHub"/> instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.Bootsrapper.UseAccessToken(System.String)">
            <summary>
            Initiates services configuration with provided access token.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns><see cref="T:Virgil.SDK.Infrastructure.ApiConfig"/> instance</returns>
        </member>
        <member name="T:Virgil.SDK.Infrastructure.ServiceLocator">
            <summary>
            Represents dependency resolution entry point
            </summary>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.ServiceLocator.Services">
            <summary>
            Gets the configured services instance
            </summary>
            <exception cref="T:System.InvalidOperationException">Service locator is not bootsrapped. Please configure it before use.</exception>
        </member>
        <member name="T:Virgil.SDK.Infrastructure.VirgilHub">
            <summary>
            Represents all exposed virgil services
            </summary>
        </member>
        <member name="M:Virgil.SDK.Infrastructure.VirgilHub.Create(System.String)">
            <summary>
            Creates new Virgil Hub instances with default configuration for specified access token.
            </summary>
            <param name="accessToken">The access token.</param>
            <returns>New Virgil Hub instance.</returns>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.VirgilHub.PublicKeys">
            <summary>
            Gets the public keys client.
            </summary>
            <value>
            The public keys.
            </value>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.VirgilHub.PrivateKeys">
            <summary>
            Gets the private keys client.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.VirgilHub.Cards">
            <summary>
            Gets the Virgil cards client.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Infrastructure.VirgilHub.Identity">
            <summary>
            Gets the identity client.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.ConnectionBase">
            <summary>
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.Errors">
            <summary>
            The error code to message mapping dictionary
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.AccessTokenHeaderName">
            <summary>
                The access token header name
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.ConnectionBase" /> class.
            </summary>
            <param name="accessToken">The application token.</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.AccessToken">
            <summary>
                Access Token
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.BaseAddress">
            <summary>
                Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.Send(Virgil.SDK.Http.IRequest)">
            <summary>
                Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.GetNativeRequest(Virgil.SDK.Http.IRequest)">
            <summary>
                Produces native HTTP request.
            </summary>
            <param name="request">The request.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.TryParseErrorCode(System.String)">
            <summary>
            Parses service response to retrieve error code
            </summary>
            <param name="content">Http body of service response</param>
            <returns>Parsed error code</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ThrowException``1(System.Net.Http.HttpResponseMessage,System.Func{System.Int32,System.String,``0})">
            <summary>
            Parses service http response and throws apropriate exception
            </summary>
            <param name="message">Message received from service</param>
            <param name="exception">Exception factory</param>
            <typeparam name="T">Virgil exception child class</typeparam>
        </member>
        <member name="T:Virgil.SDK.Http.IdentityConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints for identity api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.IdentityConnection"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.PrivateKeysConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints for public keys service.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PrivateKeysConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles private keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.RequestExtensions">
            <summary>
            Extensions to help construct http requests
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithEndpoint(Virgil.SDK.Http.Request,System.String)">
            <summary>
            Sets the request enpoint
            </summary>
            <param name="request">The request.</param>
            <param name="endpoint">The endpoint.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithBody(Virgil.SDK.Http.Request,System.Object)">
            <summary>
            Withes the body.
            </summary>
            <param name="request">The request.</param>
            <param name="body">The body.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Guid,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="cardId">The card identifier.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.EncryptJsonBody(Virgil.SDK.Http.Request,Virgil.SDK.TransferObject.VirgilCardDto)">
            <summary>
            Encrypts the json body.
            </summary>
            <param name="request">The request.</param>
            <param name="card">The Virgil Card dto.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="T:Virgil.SDK.Http.PublicServicesConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints for public api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PublicServicesConnection.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PublicServicesConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PublicServicesConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles public keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.Request">
            <summary>
            <see cref="T:Virgil.SDK.Http.IRequest" /> default implementation"/>
            </summary>
            <seealso cref="T:Virgil.SDK.Http.IRequest" />
        </member>
        <member name="M:Virgil.SDK.Http.Request.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.Request"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Endpoint">
            <summary>
            Gets the endpoint. Does not include server base address
            </summary>
            <value>
            The endpoint.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Body">
            <summary>
            Gets the requests body.
            </summary>
            <value>
            The body.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Headers">
            <summary>
            Gets the http headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Method">
            <summary>
            Gets the request method.
            </summary>
            <value>
            The method.
            </value>
        </member>
        <member name="T:Virgil.SDK.Http.RequestMethod">
            <summary>
            Represents HTTP request methods
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.Response">
            <summary>
            <see cref="T:Virgil.SDK.Http.IResponse"/> default implementation
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Body">
            <summary>
            Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.IConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IConnection.BaseAddress">
            <summary>
                Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.IConnection.Send(Virgil.SDK.Http.IRequest)">
            <summary>
                Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
        </member>
        <member name="T:Virgil.SDK.Http.IRequest">
            <summary>
            Represent a generic HTTP request 
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Endpoint">
            <summary>
                Gets the endpoint. Does not include server base address
            </summary>
            <value>
                The endpoint.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Method">
            <summary>
                Gets the request method.
            </summary>
            <value>
                The method.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Headers">
            <summary>
                Gets the http headers.
            </summary>
            <value>
                The headers.
            </value>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Body">
            <summary>
                Gets the requests body.
            </summary>
            <value>
                The body.
            </value>
        </member>
        <member name="T:Virgil.SDK.Http.IResponse">
            <summary>
                Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Body">
            <summary>
                Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Headers">
            <summary>
                Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.StatusCode">
            <summary>
                The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Keys">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Keys.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Keys.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Keys.Data">
            <summary>
              Looks up a localized string similar to {&quot;com.virgilsecurity.private-keys&quot;:{&quot;public_key&quot;:{&quot;id&quot;:&quot;9096d002-0d65-4cbe-88cb-0e09685107e8&quot;,&quot;created_at&quot;:&quot;2015-12-27T14:53:58+02:00&quot;,&quot;public_key&quot;:&quot;LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlHYk1CUUdCeXFHU000OUFnRUdDU3NrQXdNQ0NBRUJEUU9CZ2dBRW4xR1IvcXIxTm9RdStjZ2JkOHA4c2xuQQpxOHZHbXB5UnFudFhaK2RIa0UreVpFdUtKV2xjU01KamxORTY2blpXOVFra2t0QVp0aUxQdWVRdlVrQjVuNCtUCmZDenNCSmpuT2lVZ09aTncwOE5SdDRwalUxV3FxYUZwem5CYWZMZWNlZWh4UDkwT3JZcmFOOHVicnJTRHVwbUoKcVgybm1wM1FVL0F1SW5yUHVjRT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t&quot;},&quot;id&quot; [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Localization">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionDomainValueDomainIdentityIsInvalid">
            <summary>
              Looks up a localized string similar to Domain value specified for the domain identity is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionPublicKeyNotFound">
            <summary>
              Looks up a localized string similar to Public Key is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringCanNotBeEmpty">
            <summary>
              Looks up a localized string similar to String can not be empty.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringLengthIsInvalid">
            <summary>
              Looks up a localized string similar to String parameter should have length less than {0}.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataAlreadyExists">
            <summary>
              Looks up a localized string similar to User data with same fields is already exists..
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataClassSpecifiedIsInvalid">
            <summary>
              Looks up a localized string similar to User Data class specified is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationEntityNotFound">
            <summary>
              Looks up a localized string similar to User Data confirmation entity not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationTokenInvalid">
            <summary>
              Looks up a localized string similar to User Data confirmation token invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIntegrityConstraintViolation">
            <summary>
              Looks up a localized string similar to User Data integrity constraint violation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIsNotConfirmedYet">
            <summary>
              Looks up a localized string similar to The user data is not confirmed yet.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataNotFound">
            <summary>
              Looks up a localized string similar to User data is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataValueIsRequired">
            <summary>
              Looks up a localized string similar to The user data value is required.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataWasAlreadyConfirmed">
            <summary>
              Looks up a localized string similar to User Data was already confirmed and does not need further confirmation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserIdHadBeenConfirmed">
            <summary>
              Looks up a localized string similar to This user id had been confirmed earlier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserInfoDataValidationFailed">
            <summary>
              Looks up a localized string similar to User info data validation failed.
            </summary>
        </member>
        <member name="T:Virgil.SDK.TransferObject.GrabResponse">
            <summary>
            Represents private key service grab response
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.GrabResponse.VirgilCardId">
            <summary>
            Gets or sets the virgil card identifier.
            </summary>
            <value>
            The virgil card identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.GrabResponse.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>
            The private key.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.IdentityTokenDto">
            <summary>
            Represents identity object returned from virgil card service
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.IdentityTokenDto.ValidationToken">
            <summary>
            Gets or sets the validation token.
            </summary>
            <value>
            The validation token.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.IdentityTokenDto.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.IdentityTokenDto.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.TrustCardResponse">
            <summary>
            Represents trust card response
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.TrustCardResponse.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.TrustCardResponse.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
            <value>
            The created at date.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.TrustCardResponse.SignerVirgilCardId">
            <summary>
            Gets or sets the signer virgil card identifier.
            </summary>
            <value>
            The signer virgil card identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.TrustCardResponse.SignedVirgilCardId">
            <summary>
            Gets or sets the signed virgil card identifier.
            </summary>
            <value>
            The signed virgil card identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.TrustCardResponse.SignedDigest">
            <summary>
            Gets or sets the signed digest.
            </summary>
            <value>
            The signed digest.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.GetPublicKeyExtendedResponse">
            <summary>
            Represents extended public key grab response
            </summary>
            <seealso cref="T:Virgil.SDK.TransferObject.PublicKeyDto" />
        </member>
        <member name="P:Virgil.SDK.TransferObject.GetPublicKeyExtendedResponse.VirgilCards">
            <summary>
            Gets or sets the virgil cards.
            </summary>
            <value>
            The virgil cards.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.PublicKeyDto">
            <summary>
            Represent public key object returned from virgil public keys service
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.PublicKeyDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.PublicKeyDto.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
            <value>
            The created at date.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.PublicKeyDto.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>
            The public key.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.VirgilCardDescriptorDto">
            <summary>
            Represents Virgil Card without public key
            </summary>
        </member>
        <member name="M:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.TransferObject.VirgilCardDescriptorDto"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.#ctor(Virgil.SDK.TransferObject.VirgilCardDescriptorDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.TransferObject.VirgilCardDescriptorDto"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
            <value>
            The created at date.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.IsConfirmed">
            <summary>
            Gets or sets a value indicating whether this instance is confirmed.
            </summary>
            <value>
            <c>true</c> if this instance is confirmed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
            <value>
            The hash.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
            <value>
            The identity.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDescriptorDto.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
            <value>
            The custom data.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.VirgilCardDto">
            <summary>
            Represents full virgil card object returned from virgil cards service
            </summary>
            <seealso cref="T:Virgil.SDK.TransferObject.VirgilCardDescriptorDto" />
        </member>
        <member name="M:Virgil.SDK.TransferObject.VirgilCardDto.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.TransferObject.VirgilCardDto.#ctor(Virgil.SDK.TransferObject.VirgilCardDescriptorDto,Virgil.SDK.TransferObject.PublicKeyDto)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.TransferObject.VirgilCardDto"/> class.
            </summary>
            <param name="descriptor">The descriptor.</param>
            <param name="publicKey">The public key.</param>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilCardDto.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
            <value>
            The public key.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.VirgilIdentityDto">
            <summary>
            Represents identity object returned from virgil services
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilIdentityDto.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilIdentityDto.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
            <value>
            The created at date.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilIdentityDto.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilIdentityDto.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilIdentityDto.IsConfirmed">
            <summary>
            Gets or sets a value indicating whether this identity is confirmed.
            </summary>
            <value>
            <c>true</c> if this identity is confirmed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.IdentityType">
            <summary>
            Represents identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.TransferObject.IdentityType.Email">
            <summary>
            The email identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.TransferObject.IdentityType.Application">
            <summary>
            The application identity type
            </summary>
        </member>
        <member name="T:Virgil.SDK.TransferObject.VirgilUnsignResponse">
            <summary>
            Represents virgil unsign response
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilUnsignResponse.SignedVirgilCardId">
            <summary>
            Gets or sets the signed virgil card identifier.
            </summary>
            <value>
            The signed virgil card identifier.
            </value>
        </member>
        <member name="T:Virgil.SDK.TransferObject.VirgilVerifyResponse">
            <summary>
            Represents virgil verify response
            </summary>
        </member>
        <member name="P:Virgil.SDK.TransferObject.VirgilVerifyResponse.ActionId">
            <summary>
            Gets or sets the action identifier.
            </summary>
            <value>
            The action identifier.
            </value>
        </member>
    </members>
</doc>
