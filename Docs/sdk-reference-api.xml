<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Virgil.SDK</name>
    </assembly>
    <members>
        <member name="T:Virgil.SDK.Cryptography.ICryptoProvider">
            <summary>
            The <see cref="T:Virgil.SDK.Cryptography.ICryptoProvider"/> interface describes a set of methods for dealing with low-level 
            cryptographic primitives and algorithms.  
            <para>
            Developers making use of the <see cref="T:Virgil.SDK.Cryptography.ICryptoProvider"/> interface are expected to be aware of 
            the security concerns associated with both the design and implementation of the various algorithms provided.
            </para>
            </summary>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.GenerateKeypair">
            <summary>
            Generates the key pair, with default parameters.
            </summary>
            <returns>A new <see cref="T:Virgil.SDK.Cryptography.KeyPair"/> generated instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.GenerateKeypair(Virgil.SDK.Cryptography.KeyPairType)">
            <summary>
            Generates the key pair by specified type.
            </summary>
            <returns>A new <see cref="T:Virgil.SDK.Cryptography.KeyPair"/> generated instance.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Encrypt(System.Byte[],System.String)">
            <summary>
            Encrypts the data using specified password.
            </summary>
            <param name="data">The data to be encrypted.</param>
            <param name="password">The password that uses to encrypt specified data.</param>
            <remarks>This method encrypts a data that is decrypted using the 
            <see><cref>ICryptoProvider.Decrypt(byte[], string)</cref></see> method.</remarks>
            <returns>A byte array containing the result from performing the operation.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Encrypt(System.Byte[],System.Collections.Generic.IDictionary{System.String,System.Byte[]})">
            <summary>
            Encrypts the data for the specified dictionary of recipients, where Key is recipient ID and Value is Public Key.
            </summary>
            <param name="data">The data to be encrypted.</param>
            <param name="recipients">The dictionary of recipients Public Keys</param>
            <remarks>This method encrypts a data that is decrypted using the 
            <see><cref>ICryptoProvider.Decrypt(byte[], string, byte[], string)</cref></see> method.</remarks>
            <returns>A byte array containing the result from performing the operation.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Decrypt(System.Byte[],System.String)">
            <summary>
            Decrypts the cipher data using recipient's password.
            </summary>
            <param name="cipherData">The cipher data to be decrypted.</param>
            <param name="password">The password that was used to encrypt specified cipher data.</param>
            <remarks>This method decrypts a cipher data that is ecrypted using the 
            <see><cref>ICryptoProvider.Encrypt(byte[], string)</cref></see> method.</remarks>
            <returns>A byte array containing the result of decrypt operation.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Decrypt(System.Byte[],System.String,System.Byte[],System.String)">
            <summary>
            Decrypts the specified cipher data using recipient's identifier and <c>Private key</c>.
            </summary>
            <param name="cipherData">The cipher data to be decrypted.</param>
            <param name="recipientId">The unique ID, that identifies the recipient.</param>
            <param name="privateKey">A byte array that represents a <c>Private Key</c></param>
            <param name="privateKeyPassword">The <c>Private Key</c>'s password</param>
            <remarks>This method decrypts a data that is ecrypted using the 
            <see><cref>ICryptoProvider.Encrypt(byte[], IDictionary&lt;string, byte&gt;)</cref></see> method.</remarks>
            <returns>A byte array containing the result from performing the operation.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Sign(System.Byte[],System.Byte[],System.String)">
            <summary>
            Performs the signature generation operation with the signer's <c>Private Key</c> and the data to be signed.
            </summary>
            <param name="data">The data to be signed.</param>
            <param name="privateKey">A byte array that represents a <c>Private Key</c></param>
            <param name="privateKeyPassword">The <c>Private Key</c>'s password</param>
            <returns>A byte array containing the result from performing the operation.</returns>
        </member>
        <member name="M:Virgil.SDK.Cryptography.ICryptoProvider.Verify(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Performs the signature verification operation with the signer's <c>Public Key</c>.
            </summary>
            <param name="data">The data that was signed with sender's <c>Private Key</c>.</param>
            <param name="signData">The signature to be verified.</param>
            <param name="publicKey">The sender's <c>Public Key</c>.</param>
            <returns>A value that indicates whether the specified signature is valid.</returns>
        </member>
        <member name="T:Virgil.SDK.Cryptography.VirgilCrypto">
            <summary>
            The Virgil Cryptography high level API that provides a cryptographic operations in applications, such as
            signature generation and verification, and encryption and decryption.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Cryptography.VirgilCrypto.#ctor(Virgil.SDK.Cryptography.ICryptoProvider)">
            <summary>
            Initializes a new instance of the <see cref="F:Virgil.SDK.Cryptography.VirgilCrypto.crypto"/> class.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Cryptography.KeyPairType">
            <summary>
            The type of key pair.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.Default">
            <summary>
            Recommended most safe type
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_256">
            <summary>
            RSA 256 bit (not recommended)
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_512">
            <summary>
            RSA 512 bit (not recommended)
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_1024">
            <summary>
            RSA 1024 bit (not recommended)
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_2048">
            <summary>
            RSA 2048 bit 
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_3072">
            <summary>
            RSA 3072 bit 
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_4096">
            <summary>
            RSA 4096 bit 
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.RSA_8192">
            <summary>
            RSA 8192 bit 
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP192R1">
            <summary>
            192-bits NIST curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP224R1">
            <summary>
            224-bits NIST curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP256R1">
            <summary>
            256-bits NIST curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP384R1">
            <summary>
            384-bits NIST curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP521R1">
            <summary>
            521-bits NIST curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_BP256R1">
            <summary>
            256-bits Brainpool curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_BP384R1">
            <summary>
            384-bits Brainpool curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_BP512R1">
            <summary>
            512-bits Brainpool curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_Curve25519">
            <summary>
            Curve25519
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP192K1">
            <summary>
            192-bits "Koblitz" curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP224K1">
            <summary>
            224-bits "Koblitz" curve
            </summary>
        </member>
        <member name="F:Virgil.SDK.Cryptography.KeyPairType.EC_SECP256K1">
            <summary>
            256-bits "Koblitz" curve
            </summary>
        </member>
        <member name="T:Virgil.SDK.Cryptography.VirgilCryptoProvider">
            <summary>
            The <see cref="T:Virgil.SDK.Cryptography.ICryptoProvider"/> implementation that provides cryptographic operations in applications, 
            such as signature generation and verification, and encryption and decryption.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilException">
            <summary>
            Represents errors occurred during interaction with SDK components.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilServiceNotInitializedException">
            <summary>
            The exception that is thrown when a Virgil Services is not initialized.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilServiceNotInitializedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilServiceNotInitializedException"/> class.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VerificationRequestIsNotSentServiceException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VerificationRequestIsNotSentServiceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VerificationRequestIsNotSentServiceException"/> class.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.ServiceSignVerificationServiceException">
            <summary>
            Occurs when service response sign is invalid
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilServiceException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.ServiceSignVerificationServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.ServiceSignVerificationServiceException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.IdentityServiceServiceException">
            <summary>
            Base exception for all Identity Service exceptions
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilServiceException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.IdentityServiceServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.IdentityServiceServiceException"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilServiceException">
            <summary>
            Base exception class for all Virgil Services operations
            </summary>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilServiceException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilServiceException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="P:Virgil.SDK.Exceptions.VirgilServiceException.ErrorCode">
            <summary>
            Gets the error code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilServicePrivateServicesException">
            <summary>
                Private service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilServiceException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilServicePrivateServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilServicePrivateServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Exceptions.VirgilServicePublicServicesException">
            <summary>
                Public service exception
            </summary>
            <seealso cref="T:Virgil.SDK.Exceptions.VirgilServiceException" />
        </member>
        <member name="M:Virgil.SDK.Exceptions.VirgilServicePublicServicesException.#ctor(System.Int32,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Exceptions.VirgilServicePublicServicesException" /> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IServiceHub">
            <summary>
            Represents all exposed virgil services
            </summary>
        </member>
        <member name="P:Virgil.SDK.Clients.IServiceHub.PrivateKeys">
            <summary>
            Gets a client that handle requests for <c>Private Key</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Clients.IServiceHub.Cards">
            <summary>
            Gets a client that handle requests for <c>Virgil Card</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Clients.IServiceHub.Identity">
            <summary>
            Gets a client that handle requests <c>Identity</c> service resources.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.ResponseVerifyClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services which provide response signature.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.ResponseVerifyClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.ResponseVerifyClient.VerifyResponse(Virgil.SDK.Http.IResponse,System.Byte[])">
            <summary>
            Verifies the HTTP response with specified public key.
            </summary>
            <param name="nativeResponse">An instance of HTTP response.</param>
            <param name="publicKey">A public key to be used for verification.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IdentityServiceClient">
            <summary>
            Provides common methods for validating and authorization a different types of identities.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityServiceClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.IdentityServiceClient"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityServiceClient.Verify(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="identityType">The type of identity.</param>
            <param name="extraFields"></param>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Clients.IdentityServiceClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityServiceClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier that was obtained on verification step.</param>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityServiceClient.IsValid(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.String)">
            <summary>
            Returns true if validation token is valid.
            </summary>
            <param name="identityValue">The type of identity.</param>
            <param name="identityType">The identity value.</param>
            <param name="validationToken">The validation token.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IdentityServiceClient.VerifyEmail(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initiates a process to verify a specified email address.
            </summary>
            <param name="emailAddress">
            The email address you are going to verify.
            </param>
            <param name="extraFields">
            In some cases it could be necessary to pass some parameters and receive them back 
            in an email. For this special case an optional <c>extraFields</c> dictionary can be used. 
            All values passed in <c>extraFields</c> parameter will be passed back in an email 
            in a hidden form with extra hidden fields.
            </param>
            <returns>The verification identuty class</returns>
        </member>
        <member name="T:Virgil.SDK.Clients.IIdentityServiceClient">
            <summary>
            Interface that specifies communication with Virgil Security Identity service.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityServiceClient.Verify(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sends the request for identity verification, that's will be processed depending of specified type.
            </summary>
            <param name="identityValue">An unique string that represents identity.</param>
            <param name="identityType">The identity type that going to be verified.</param>
            <param name="extraFields"></param>
            <remarks>
            Use method <see cref="M:Virgil.SDK.Clients.IIdentityServiceClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)" /> to confirm and get the indentity token.
            </remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityServiceClient.Confirm(System.Guid,System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="actionId">The action identifier.</param>
            <param name="code">The confirmation code.</param>
            <param name="timeToLive">The time to live.</param>
            <param name="countToLive">The count to live.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityServiceClient.IsValid(System.String,Virgil.SDK.Identities.VerifiableIdentityType,System.String)">
            <summary>
            Checks whether the validation token is valid for specified identity.
            </summary>
            <param name="identityValue">The type of identity.</param>
            <param name="identityType">The identity value.</param>
            <param name="validationToken">
            The string value that represents validation token for Virgil Identity Service.
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.IIdentityServiceClient.VerifyEmail(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initiates a process to verify a specified email address.
            </summary>
            <param name="emailAddress">
            The email address you are going to verify.
            </param>
            <param name="extraFields">
            In some cases it could be necessary to pass some parameters and receive them back 
            in an email. For this special case an optional <c>extraFields</c> dictionary can be used. 
            All values passed in <c>extraFields</c> parameter will be passed back in an email 
            in a hidden form with extra hidden fields.
            </param>
            <returns>The verification identuty class</returns>
        </member>
        <member name="T:Virgil.SDK.Clients.EndpointClient">
            <summary>
            Provides a base implementation of HTTP client for the Virgil Security services.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.Connection">
            <summary>
            The connection
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.EndpointApplicationId">
            <summary>
            The endpoint application identifier
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.EndpointClient.Cache">
            <summary>
            The cache
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.EndpointClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The service key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.Send``1(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP POST request.
            Attempts to map the response body to an object of type <typeparamref name="TResult" />
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.EndpointClient.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Performs an asynchronous HTTP request.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.IServiceKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IServiceKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.Models.CardModel"/>, that represents service card.</returns>
        </member>
        <member name="T:Virgil.SDK.Clients.IPrivateKeysServiceClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysServiceClient.Stash(System.Guid,System.Byte[],System.String)">
            <summary>
            Uploads private key to private key store.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysServiceClient.Get(System.Guid,Virgil.SDK.Identities.IdentityInfo)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="identityInfo"></param>
            <remarks>Random password will be generated to encrypt server response</remarks>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysServiceClient.Get(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.String)">
            <summary>
            Downloads private part of key by its public id.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="identityInfo"></param>
            <param name="responsePassword"></param>
        </member>
        <member name="M:Virgil.SDK.Clients.IPrivateKeysServiceClient.Destroy(System.Guid,System.Byte[],System.String)">
            <summary>
            Deletes the private key from service by specified card ID.
            </summary>
            <param name="cardId">The public key identifier.</param>
            <param name="privateKey">The private key value. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.IVirgilService">
            <summary>
            Interface that specifies the Virgil Security service.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.ServiceIdentities">
            <summary>
            Holds known Virgil application ids
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.ServiceIdentities.IdentityService">
            <summary>
            Identity service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.ServiceIdentities.PrivateService">
            <summary>
            Private key service app id
            </summary>
        </member>
        <member name="F:Virgil.SDK.Clients.ServiceIdentities.PublicService">
            <summary>
            Public service app id
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.DynamicKeyCache">
            <summary>
            Provides cached value of known public key for channel encryption and response verification
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.IServiceKeyCache" />
        </member>
        <member name="M:Virgil.SDK.Clients.DynamicKeyCache.#ctor(Virgil.SDK.Http.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.DynamicKeyCache" /> class.
            </summary>
            <param name="connection">The Virgil Public Services connection instance.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.DynamicKeyCache.GetServiceCard(System.String)">
            <summary>
            Gets the service's public key by specified identifier.
            </summary>
            <param name="servicePublicKeyId">The service's public key identifier.</param>
            <returns>
            An instance of <see cref="T:Virgil.SDK.Models.PublicKeyModel" />, that represents Public Key.
            </returns>
        </member>
        <member name="M:Virgil.SDK.Clients.DynamicKeyCache.GetApplicationCards(System.String)">
            <summary>
            Get the application Virgil Card.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Clients.PrivateKeysServiceClient">
            <summary>
            Provides common methods to interact with Private Keys resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.EndpointClient" />
            <seealso cref="T:Virgil.SDK.Clients.IPrivateKeysServiceClient" />
        </member>
        <member name="M:Virgil.SDK.Clients.PrivateKeysServiceClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.PrivateKeysServiceClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The known key provider.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.ICardsServiceClient">
            <summary>
            Provides common methods to interact with Public Keys resource endpoints.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and existing public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKeyId">The public key identifier in Virgil Services.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKey">The generated public key value.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.PublishAsync(Virgil.SDK.VirgilCardRequest)">
            <summary>
            Publishes a new <see cref="T:Virgil.SDK.VirgilCard"/> by specified <see cref="T:Virgil.SDK.VirgilCardRequest"/> 
            ticket to Virgil Cards Service.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.SearchAsync(System.String,System.String)">
            <summary>
            Searches for the Virgil global Cards by specified criteria.
            </summary>
            <param name="identity">The user's identity value.</param>
            <param name="identityType">The user's identity type.</param>
            <returns>
            The collection of <see cref="T:Virgil.SDK.VirgilCard"/>.
            </returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Search(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches the private cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier. Required.</param>
            <param name="identityType">The value of identity type. Optional.</param>
            <param name="includeUnauthorized">
            The request parameter specifies whether an unconfirmed Virgil Cards 
            should be included in the search result.
            </param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Search(System.String,Virgil.SDK.Identities.IdentityType)">
            <summary>
            Searches the global cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier. Required.</param>
            <param name="identityType">The type of identifier. Optional.</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Get(System.Guid)">
            <summary>
            Gets the card by ID.
            </summary>
            <param name="cardId">The card ID.</param>
            <returns>Virgil card model.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.GetAsync(System.Guid)">
            <summary>
            Gets the <see cref="T:Virgil.SDK.VirgilCard"/> by specified identifier.
            </summary>
            <param name="cardId">The <see cref="T:Virgil.SDK.VirgilCard"/> identifier.</param>
            <returns>An instance of <see cref="T:Virgil.SDK.VirgilCard"/> entity.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.ICardsServiceClient.Revoke(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.String)">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="cardId">The card ID.</param>
            <param name="identityInfo">Validation identityInfo for card's identity.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.Clients.CardsServiceClient">
            <summary>
            Provides common methods to interact with Virgil Card resource endpoints.
            </summary>
            <seealso cref="T:Virgil.SDK.Clients.EndpointClient" />
            <seealso cref="T:Virgil.SDK.Clients.ICardsServiceClient" />
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.#ctor(Virgil.SDK.Http.IConnection,Virgil.SDK.Clients.IServiceKeyCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Clients.CardsServiceClient" /> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="cache">The services key cache.</param>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Guid,System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and existing public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKeyId">The public key identifier in Virgil Services.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Create(Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.Byte[],System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new card with specified identity and public key.
            </summary>
            <param name="identityInfo">The information about identity.</param>
            <param name="publicKey">The generated public key value.</param>
            <param name="privateKey">
            The private key. Private key is used to produce sign. It is not transfered over network
            </param>
            <param name="privateKeyPassword">
            The private key password. Pass this parameter if your private key is encrypted with password</param>
            <param name="customData">
            The dictionary of key/value pairs with custom values that can be used by different applications
            </param>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Search(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Searches the private cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier.</param>
            <param name="identityType">The type of identifier.</param>
            <param name="includeUnauthorized">Unconfirmed Virgil cards will be included in output. Optional</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Search(System.String,Virgil.SDK.Identities.IdentityType)">
            <summary>
            Searches the global cards by specified criteria.
            </summary>
            <param name="identityValue">The value of identifier.</param>
            <param name="identityType">The type of identifier.</param>
            <returns>The collection of Virgil Cards.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Get(System.Guid)">
            <summary>
            Gets the card by ID.
            </summary>
            <param name="cardId">The card ID.</param>
            <returns>Virgil card model.</returns>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.GetAsync(System.Guid)">
            <summary>
            Gets the <see cref="T:Virgil.SDK.VirgilCard" /> by specified identifier.
            </summary>
            <param name="cardId">The <see cref="T:Virgil.SDK.VirgilCard" /> identifier.</param>
            <returns>
            An instance of <see cref="T:Virgil.SDK.VirgilCard" /> entity.
            </returns>
        </member>
        <member name="M:Virgil.SDK.Clients.CardsServiceClient.Revoke(System.Guid,Virgil.SDK.Identities.IdentityInfo,System.Byte[],System.String)">
            <summary>
            Revokes the specified public key.
            </summary>
            <param name="cardId">The card ID.</param>
            <param name="identityInfo">Validation token for card's identity.</param>
            <param name="privateKey">The private key. Private key is used to produce sign. It is not transfered over network</param>
            <param name="privateKeyPassword">The private key password.</param>
        </member>
        <member name="T:Virgil.SDK.VirgilCard">
            <summary>
            A Virgil Card is the main entity of the Virgil Services, it includes an information about the user 
            and his public key. The Virgil Card identifies the user by one of his available types, such as an email, 
            a phone number, etc.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilCard.#ctor(Virgil.SDK.Models.CardModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.VirgilCard"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.Id">
            <summary>
            Gets the unique identifier for the Virgil Card.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.Identity">
            <summary>
            Gets the value of current Virgil Card identity.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.IdentityType">
            <summary>
            Gets the type of current Virgil Card identity.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.PublicKey">
            <summary>
            Gets the Public Key of current Virgil Card.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.Data">
            <summary>
            Gets the custom <see cref="T:Virgil.SDK.VirgilCard"/> parameters.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.Version">
            <summary>
            Gets the <see cref="T:Virgil.SDK.VirgilCard"/> version.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.IsConfirmed">
            <summary>
            Gets a value indicating whether the current <see cref="T:Virgil.SDK.VirgilCard"/> identity is confirmed by Virgil Identity service.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.IsGlobal">
            <summary>
            Gets a value indicating whether this <see cref="T:Virgil.SDK.VirgilCard"/> is global.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.CreatedAt">
            <summary>
            Gets the date and time of Virgil Card creation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCard.RevokedAt">
            <summary>
            Gets the date and time of <see cref="T:Virgil.SDK.VirgilCard"/> revocation.
            </summary>
        </member>
        <member name="T:Virgil.SDK.VirgilCardRequest">
            <summary>
            The Virgil Card request is a data structure that represents user's identity, Public Key and other data. 
            The request is used to tell the Virgil Cards service that the user's identity and Public Key are valid, 
            this kind of validation can be reached by validating signatures of owner's Private Key and 
            application's Private Key.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilCardRequest.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Virgil.SDK.VirgilCardRequest"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilCardRequest.#ctor(System.String,System.String,Virgil.SDK.VirgilKey,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Virgil.SDK.VirgilCardRequest"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.Id">
            <summary>
            Gets an unique idenitity of the ticket.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.Identity">
            <summary>
            Gets the user's identity value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.IdentityType">
            <summary>
            Gets the user's identity type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.PublicKey">
            <summary>
            Gets a Public Key value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.Fingerprint">
            <summary>
            Gets the canonical form of current <see cref="T:Virgil.SDK.VirgilCard"/> instance.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.IsGlobal">
            <summary>
            Gets a value indicating whether this <see cref="T:Virgil.SDK.VirgilCard"/> is global.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.Data">
            <summary>
            Gets the key/value parameters of future <see cref="T:Virgil.SDK.VirgilCard"/>.
            </summary>
        </member>
        <member name="P:Virgil.SDK.VirgilCardRequest.Signs">
            <summary>
            Gets the list of digital signatures that was signed the <see cref="P:Virgil.SDK.VirgilCardRequest.Fingerprint"/> of current <see cref="T:Virgil.SDK.VirgilCardRequest"/>.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilCardRequest.Export">
            <summary>
            Exports a current <see cref="T:Virgil.SDK.VirgilCardRequest"/> to it's binary representation.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilCardRequest.AddSign(System.Guid,System.Byte[])">
            <summary>
            Adds a signature of third party Private Keys.
            </summary>
            <param name="cardId">The <see cref="T:Virgil.SDK.VirgilCard"/>'s identifier.</param>
            <param name="sign">The </param>
            <example>
            var keyPair = VirgilKeyPair.Generate(); 
            var ticket = new VirgilCardTicket("demo@virgilsecurity.com", "email", keyPair.PublicKey());
            
            var ownerSign = CryptoHelper.Sign(ticket.Fingerprint, keyPair.PrivateKey());
            var appSign = CryptoHelper.Sign(ticket.Fingerprint, %APP_PRIVATE_KEY%);
            
            ticket.AddOwnerSign(ownerSign);
            ticket.AddSign(%APP_CARD_ID%, appSign);
            </example>
        </member>
        <member name="M:Virgil.SDK.VirgilCardRequest.Import(System.String)">
            <summary>
            Imports the <see cref="T:Virgil.SDK.VirgilCardRequest"/> from it's binary representation.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Helpers.Ensure">
            <summary>
                Ensure input parameters
            </summary>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNull(System.Object,System.String)">
            <summary>
                Checks an argument to ensure it isn't null.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="M:Virgil.SDK.Helpers.Ensure.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
                Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name="value">The argument value to check</param>
            <param name="name">The name of the argument</param>
        </member>
        <member name="T:Virgil.SDK.Identities.IEmailVerifier">
            <summary>
            Represents a class for identity confirmation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IEmailVerifier.ActionId">
            <summary>
            Gets the ID of identity verification process.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.IEmailVerifier.Confirm(System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="T:Virgil.SDK.Identities.VerifiableIdentityType">
            <summary>
            Represents a supported identity type that Virgil Service are able to verify.
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.VerifiableIdentityType.Email">
            <summary>
            The email identity type
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityConfirmationResponse">
            <summary>
            Represents an confirmed identity information.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityConfirmationResponse.ValidationToken">
            <summary>
            Gets or sets the validation token.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityInfo">
            <summary>
            Represents an identity information.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityInfo.ValidationToken">
            <summary>
            Gets or sets the validation token.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.EmailVerifier">
            <summary>
            Represents a class for email address verification.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.EmailVerifier.#ctor(System.Guid,Virgil.SDK.Clients.IIdentityServiceClient)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Identities.EmailVerifier"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.EmailVerifier.ActionId">
            <summary>
            Gets the verification process ID.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Identities.EmailVerifier.Confirm(System.String,System.Int32,System.Int32)">
            <summary>
            Confirms the identity using confirmation code, that has been generated to confirm an identity.
            </summary>
            <param name="code">The confirmation code that was recived on email box.</param>
            <param name="timeToLive">
            The parameter is used to limit the lifetime of the token in seconds 
            (maximum value is 60 * 60 * 24 * 365 = 1 year)
            </param>
            <param name="countToLive">
            The parameter is used to restrict the number of token 
            usages (maximum value is 100)
            </param>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityType">
            <summary>
            Represents identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.IdentityType.Email">
            <summary>
            The email identity type
            </summary>
        </member>
        <member name="F:Virgil.SDK.Identities.IdentityType.Application">
            <summary>
            The application identity type
            </summary>
        </member>
        <member name="T:Virgil.SDK.Identities.IdentityVerificationResponse">
            <summary>
            Represents virgil verify response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Identities.IdentityVerificationResponse.ActionId">
            <summary>
            Gets or sets the action identifier.
            </summary>
            <value>
            The action identifier.
            </value>
        </member>
        <member name="T:Virgil.SDK.ServiceHubConfig">
            <summary>
            Represents a configuration file that is applicable to a particular <see cref="T:Virgil.SDK.ServiceHub"/>. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.ServiceHubConfig"/> class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithPublicServicesAddress(System.String)">
            <summary>
            Overrides default Virgil Public Keys service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithPrivateServicesAddress(System.String)">
            <summary>
            Overrides default Virgil Private Keys service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithIdentityServiceAddress(System.String)">
            <summary>
            Overrides default Virgil Identity service address.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.WithStagingEnvironment">
            <summary>
            Initializes Virgil Securtity services with staging urls.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHubConfig.UseAccessToken(System.String)">
            <summary>
            Sets the application token to access to the Virgil Security services. This token has to 
            be generated with application private key on Virgil Security portal or manually with SDK Utils.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Utils.Obfuscator">
            <summary>
            Provides a helper methods to obfuscate the data.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Utils.Obfuscator.PBKDF(System.String,System.String,Virgil.Crypto.Foundation.VirgilPBKDF.Hash,System.UInt32)">
            <summary>
            Derives the obfuscated data from incoming parameters using PBKDF function.
            </summary>
            <param name="value">The string value to be hashed.</param>
            <param name="algorithm">The hash algorithm <see cref="T:Virgil.Crypto.Foundation.VirgilPBKDF.Hash"/> type.</param>
            <param name="iterations">The count of iterations.</param>
            <param name="salt">The hash salt.</param>
        </member>
        <member name="M:Virgil.SDK.Utils.Obfuscator.PBKDF(System.Byte[],System.String,Virgil.Crypto.Foundation.VirgilPBKDF.Hash,System.UInt32)">
            <summary>
            Derives the obfuscated data from incoming parameters using PBKDF function.
            </summary>
            <param name="bytes">The  value to be hashed.</param>
            <param name="algorithm">The hash algorithm <see cref="T:Virgil.Crypto.Foundation.VirgilPBKDF.Hash"/> type.</param>
            <param name="iterations">The count of iterations.</param>
            <param name="salt">The hash salt.</param>
        </member>
        <member name="T:Virgil.SDK.Utils.ValidationTokenGenerator">
            <summary>
            Provides a helper methods to generate validation token based on application's private key.  
            </summary>
        </member>
        <member name="M:Virgil.SDK.Utils.ValidationTokenGenerator.Generate(System.String,System.String,System.Byte[],System.String)">
            <summary>
            Generates the validation token based on application's private key. 
            </summary>
            <param name="identityValue">The identity value.</param>
            <param name="identityType">The type of the identity.</param>
            <param name="privateKey">The application's private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="M:Virgil.SDK.Utils.ValidationTokenGenerator.Generate(System.Guid,System.String,System.String,System.Byte[],System.String)">
            <summary>
            Generates the validation token based on application's private key. 
            </summary>
            <param name="identityValue">The identity value.</param>
            <param name="identityType">The type of the identity.</param>
            <param name="privateKey">The application's private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns></returns>
        </member>
        <member name="T:Virgil.SDK.Http.ConnectionBase">
            <summary>
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.Errors">
            <summary>
            The error code to message mapping dictionary
            </summary>
        </member>
        <member name="F:Virgil.SDK.Http.ConnectionBase.AccessTokenHeaderName">
            <summary>
            The access token header name
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.ConnectionBase" /> class.
            </summary>
            <param name="accessToken">The application token.</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.AccessToken">
            <summary>
            Access Token
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.ConnectionBase.BaseAddress">
            <summary>
            Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.Send(Virgil.SDK.Http.IRequest)">
            <summary>
            Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.GetNativeRequest(Virgil.SDK.Http.IRequest)">
            <summary>
                Produces native HTTP request.
            </summary>
            <param name="request">The request.</param>
            <returns>HttpRequestMessage</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.TryParseErrorCode(System.String)">
            <summary>
            Parses service response to retrieve error code
            </summary>
            <param name="content">Http body of service response</param>
            <returns>Parsed error code</returns>
        </member>
        <member name="M:Virgil.SDK.Http.ConnectionBase.ThrowException``1(System.Net.Http.HttpResponseMessage,System.Func{System.Int32,System.String,``0})">
            <summary>
            Parses service http response and throws apropriate exception
            </summary>
            <param name="message">Message received from service</param>
            <param name="exception">Exception factory</param>
            <typeparam name="T">Virgil exception child class</typeparam>
        </member>
        <member name="T:Virgil.SDK.Http.IdentityConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints for identity api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.IdentityConnection"/> class.
            </summary>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.IdentityConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.PrivateKeysConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints for public keys service.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.#ctor(System.String,System.Uri)">
            <summary>
                Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PrivateKeysConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PrivateKeysConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
                Handles private keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.RequestExtensions">
            <summary>
            Extensions to help construct http requests
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithEndpoint(Virgil.SDK.Http.Request,System.String)">
            <summary>
            Sets the request enpoint
            </summary>
            <param name="request">The request.</param>
            <param name="endpoint">The endpoint.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.WithBody(Virgil.SDK.Http.Request,System.Object)">
            <summary>
            Withes the body.
            </summary>
            <param name="request">The request.</param>
            <param name="body">The body.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Guid,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="cardId">The card identifier.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.SignRequest(Virgil.SDK.Http.Request,System.Byte[],System.String)">
            <summary>
            Signs the request.
            </summary>
            <param name="request">The request.</param>
            <param name="privateKey">The private key.</param>
            <param name="privateKeyPassword">The private key password.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="M:Virgil.SDK.Http.RequestExtensions.EncryptJsonBody(Virgil.SDK.Http.Request,Virgil.SDK.Models.CardModel)">
            <summary>
            Encrypts the json body.
            </summary>
            <param name="request">The request.</param>
            <param name="card">The Virgil Card dto.</param>
            <returns><see cref="T:Virgil.SDK.Http.Request"/></returns>
        </member>
        <member name="T:Virgil.SDK.Http.PublicServiceConnection">
            <summary>
            A connection for making HTTP requests against URI endpoints for public api services.
            </summary>
            <seealso cref="T:Virgil.SDK.Http.ConnectionBase" />
            <seealso cref="T:Virgil.SDK.Http.IConnection" />
        </member>
        <member name="M:Virgil.SDK.Http.PublicServiceConnection.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.PublicServiceConnection" /> class.
            </summary>
            <param name="accessToken">Application token</param>
            <param name="baseAddress">The base address.</param>
        </member>
        <member name="M:Virgil.SDK.Http.PublicServiceConnection.ExceptionHandler(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles public keys service exception responses
            </summary>
            <param name="message">The http response message.</param>
        </member>
        <member name="T:Virgil.SDK.Http.Request">
            <summary>
            <see cref="T:Virgil.SDK.Http.IRequest" /> default implementation"/>
            </summary>
            <seealso cref="T:Virgil.SDK.Http.IRequest" />
        </member>
        <member name="M:Virgil.SDK.Http.Request.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.Http.Request"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Endpoint">
            <summary>
            Gets the endpoint. Does not include server base address
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Body">
            <summary>
            Gets the requests body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Headers">
            <summary>
            Gets the http headers.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Request.Method">
            <summary>
            Gets the request method.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.RequestMethod">
            <summary>
            Represents HTTP request methods
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.Response">
            <summary>
            <see cref="T:Virgil.SDK.Http.IResponse"/> default implementation
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Body">
            <summary>
            Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.Response.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.IConnection">
            <summary>
                A connection for making HTTP requests against URI endpoints.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IConnection.BaseAddress">
            <summary>
                Base address for the connection.
            </summary>
        </member>
        <member name="M:Virgil.SDK.Http.IConnection.Send(Virgil.SDK.Http.IRequest)">
            <summary>
                Sends an HTTP request to the API.
            </summary>
            <param name="request">The HTTP request details.</param>
        </member>
        <member name="T:Virgil.SDK.Http.IRequest">
            <summary>
            Represent a generic HTTP request 
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Endpoint">
            <summary>
            Gets the endpoint. Does not include server base address
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Method">
            <summary>
            Gets the request method.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Headers">
            <summary>
            Gets the http headers.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IRequest.Body">
            <summary>
            Gets the requests body.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Http.IResponse">
            <summary>
            Represents a generic HTTP response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Body">
            <summary>
            Raw response body.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.Headers">
            <summary>
            Information about the API.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Http.IResponse.StatusCode">
            <summary>
            The response status code.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Localization">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionDomainValueDomainIdentityIsInvalid">
            <summary>
              Looks up a localized string similar to Domain value specified for the domain identity is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionIdentityVerificationIsNotSent">
            <summary>
              Looks up a localized string similar to Identity verification request is not sent.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionPublicKeyNotFound">
            <summary>
              Looks up a localized string similar to Public Key is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringCanNotBeEmpty">
            <summary>
              Looks up a localized string similar to String can not be empty.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionStringLengthIsInvalid">
            <summary>
              Looks up a localized string similar to String parameter should have length less than {0}.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataAlreadyExists">
            <summary>
              Looks up a localized string similar to User data with same fields is already exists..
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataClassSpecifiedIsInvalid">
            <summary>
              Looks up a localized string similar to User Data class specified is invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationEntityNotFound">
            <summary>
              Looks up a localized string similar to User Data confirmation entity not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataConfirmationTokenInvalid">
            <summary>
              Looks up a localized string similar to User Data confirmation identityInfo invalid.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIntegrityConstraintViolation">
            <summary>
              Looks up a localized string similar to User Data integrity constraint violation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataIsNotConfirmedYet">
            <summary>
              Looks up a localized string similar to The user data is not confirmed yet.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataNotFound">
            <summary>
              Looks up a localized string similar to User data is not found.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataValueIsRequired">
            <summary>
              Looks up a localized string similar to The user data value is required.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserDataWasAlreadyConfirmed">
            <summary>
              Looks up a localized string similar to User Data was already confirmed and does not need further confirmation.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserIdHadBeenConfirmed">
            <summary>
              Looks up a localized string similar to This user id had been confirmed earlier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionUserInfoDataValidationFailed">
            <summary>
              Looks up a localized string similar to User info data validation failed.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Localization.ExceptionVirgilServiceNotInitialized">
            <summary>
              Looks up a localized string similar to The Access Token is not provider..
            </summary>
        </member>
        <member name="T:Virgil.SDK.ServiceHub">
            <summary>
            Represents all exposed virgil services
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.#ctor(Virgil.SDK.ServiceHubConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Virgil.SDK.ServiceHub"/> class.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.PrivateKeys">
            <summary>
            Gets a client that handle requests for <c>PrivateKey</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.Cards">
            <summary>
            Gets a client that handle requests for <c>Card</c> resources.
            </summary>
        </member>
        <member name="P:Virgil.SDK.ServiceHub.Identity">
            <summary>
            Gets a client that handle requests Identity service resources.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Create(System.String)">
            <summary>
            Creates new <see cref="T:Virgil.SDK.ServiceHub"/> instances with default configuration 
            for specified access token.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Create(Virgil.SDK.ServiceHubConfig)">
            <summary>
            Creates new <see cref="T:Virgil.SDK.ServiceHub"/> instances with default configuration 
            for specified configuration.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.Initialize">
            <summary>
            Initializes an implementation of the ServiceHub class.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildPrivateKeysClient">
            <summary>
            Builds a Private Key client instance.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildCardsClient">
            <summary>
            Builds a Cards client instance.
            </summary>
        </member>
        <member name="M:Virgil.SDK.ServiceHub.BuildIdentityClient">
            <summary>
            Builds a Identity Service client instance.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.PrivateKeyModel">
            <summary>
            Represents private key service grab response
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PrivateKeyModel.CardId">
            <summary>
            Gets or sets the virgil card identifier.
            </summary>
            <value>
            The virgil card identifier.
            </value>
        </member>
        <member name="P:Virgil.SDK.Models.PrivateKeyModel.PrivateKey">
            <summary>
            Gets or sets the private key.
            </summary>
            <value>
            The private key.
            </value>
        </member>
        <member name="T:Virgil.SDK.Models.PublicKeyModel">
            <summary>
            Represent public key object returned from virgil public keys service
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.PublicKeyModel.Value">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.CardModel">
            <summary>
            Represents full virgil card object returned from virgil cards service
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.AuthorizedBy">
            <summary>
            Gets or sets a value indicating whether this instance is confirmed.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.Identity">
            <summary>
            Gets or sets the identity.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.CardModel.PublicKey">
            <summary>
            Gets or sets the public key.
            </summary>
        </member>
        <member name="T:Virgil.SDK.Models.IdentityModel">
            <summary>
            Represents identity object returned from virgil services
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Virgil.SDK.Models.IdentityModel.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Virgil.SDK.VirgilKey">
            <summary>
            The <see cref="T:Virgil.SDK.VirgilKey"/> object represents an opaque reference to keying material 
            that is managed by the user agent.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilKey.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Virgil.SDK.VirgilKey"/> class from being created.
            </summary>
        </member>
        <member name="M:Virgil.SDK.VirgilKey.Create(System.String)">
            <summary>
            Creates an instance of <see cref="T:Virgil.SDK.VirgilKey"/> object that represents a new named key, 
            using default key storage provider.
            </summary>
            <param name="keyName">The name of the key.</param>
            <returns>A newly created key.</returns>
        </member>
    </members>
</doc>
